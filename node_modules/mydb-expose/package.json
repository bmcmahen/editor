{
  "name": "mydb-expose",
  "version": "2.0.7",
  "description": "mydb express middleware",
  "private": true,
  "dependencies": {
    "monk": "0.5.0",
    "superagent": "0.15.4",
    "uid2": "*",
    "debug": "*"
  },
  "devDependencies": {
    "express": "3.0.0rc4",
    "mocha": "*",
    "supertest": "*",
    "expect.js": "*"
  },
  "readme": "# mydb-expose\n\n  Connect middleware to expose documents through MyDB.\n\n## Example\n\n```js\n// dependencies\nvar mydb = require('mydb-expose');\nvar express = require('express');\nvar app = express();\nvar db = require('monk')():\n\n// middleware\napp.use(express.cookieParser());\napp.use(mydb({ mongo: '127.0.0.1:27017', url: '127.0.0.1:3000' }));\n\n// example session route\napp.post('/login', function(req, res){\n  req.session.set('user_id', '123');\n  res.send(200);\n});\n\n// example document expose\napp.get('/some/doc', function(req, res){\n  res.send(db.get('collection').findOne({ some: 'query' }));\n});\n```\n\n## API\n\n### Middleware\n\n  Options:\n  \n  - `url`\n    - a string like `cloudup.mydb.io`\n  - `redis`\n    - a redis client instance or\n    - a string like `localhost:6379`\n  - `mongo`\n    - a `monk` instance\n    - a string like `localhost:27017/test`\n  - `sessionExpose`\n    - fields to expose from the session document (defaults to `'-sid'`)\n\n### ServerResponse#send\n\n  The express method is overridden to detect `monk`-style `Promise` \n  objects.\n\n  If the request contains the header `X-Requested-With: MyDB`.\n\n### ServerRequest#session\n\n  Points to the \n\n### MySession\n\n  Operations executed on the `session` object defer the response sent to\n  the client automatically, unless a callback is passed to one of the\n  functions below.\n\n  Errors are `next`d automatically.\n\n  The object is populated with the latest snapshot from the database.\n\n#### reload(fn)\n\n  Reloads the session from database.\n\n#### set(key, val, fn)\n\n  Calls `$set` with the given `key` and `val`.\n\n#### unset(key, fn)\n\n  Calls `$unset` with the given `key`.\n\n#### pop(key, fn)\n\n  Calls `$pop` with the given `key`.\n\n#### shift(key, fn)\n\n  Calls `$pop` with the given `key` and `-1`, producing a shift.\n\n#### push(key, val, fn)\n\n  Calls `$push` to the given `key` with `val`.\n\n#### pushAll(key, vals, fn)\n\n  Calls `$push` to the given `key` with `vals`.\n\n#### pull(key, val, fn)\n\n  Calls `$pull` with the given `key` and `val`.\n\n#### pullAll(key, vals, fn)\n\n  Calls `$pullAll` with the given `key` and `vals`.\n\n#### rename(key, newKey, fn)\n\n  Calls `$rename` with the given `key` and `newKey`.\n\n#### get(key, fn)\n\n  Gets the given `key` asynchronously. Normally you just want to access\n  `req.session[key]`.\n",
  "readmeFilename": "README.md",
  "_id": "mydb-expose@2.0.7",
  "dist": {
    "shasum": "84fe171cd5d7cb906ab25a3a5c1f60562c4e0224"
  },
  "_from": "test_modules/mydb-expose"
}
